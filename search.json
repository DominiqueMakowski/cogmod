[{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The Data","title":"RT-only Models","text":"chapter, using data Wagenmakers et al., (2008) - Experiment 1 also reanalyzed Heathcote & Love (2012), contains responses response times several participants two conditions (instructions emphasized either speed accuracy). Using procedure authors, excluded trials uninterpretable response time, .e., responses fast (<200 ms instead <180 ms) slow (>2 sec instead >3 sec). going first take interest response times (RT) Correct answers (can assume errors underpinned different generative process).","code":"set.seed(123)  # For reproducibility  df <- read.csv(\"https://raw.githubusercontent.com/DominiqueMakowski/CognitiveModels/main/data/wagenmakers2008.csv\") df <- df[df$RT > 0.2 & df$Participant %in% c(1, 2, 3), ]  # Show 10 first rows head(df, 10) #>    Participant Condition    RT Error Frequency #> 1            1     Speed 0.700 FALSE       Low #> 2            1     Speed 0.392  TRUE  Very Low #> 3            1     Speed 0.460 FALSE  Very Low #> 4            1     Speed 0.455 FALSE  Very Low #> 5            1     Speed 0.505  TRUE       Low #> 6            1     Speed 0.773 FALSE      High #> 7            1     Speed 0.390 FALSE      High #> 8            1     Speed 0.587  TRUE       Low #> 9            1     Speed 0.603 FALSE       Low #> 10           1     Speed 0.435 FALSE      High df <- df[df$Error == 0, ] ggplot(df, aes(x = RT, fill = Condition)) +   geom_histogram(bins = 120, alpha = 0.8, position = \"identity\") +   scale_fill_manual(values = c(\"darkgreen\", \"darkred\")) +   theme_minimal()"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"models","dir":"Articles","previous_headings":"","what":"Models","title":"RT-only Models","text":"basic linear model.","code":"f <- bf(   RT ~ Condition )  m_normal <- brm(f,   data = df,    init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_normal <- brms::add_criterion(m_normal, \"loo\")   saveRDS(m_normal, file = \"models/m_normal.rds\") f <- bf(   RT ~ Condition,   sigma ~ Condition,   beta ~ Condition,   family = exgaussian() )  m_exgauss <- brm(f,   data = df,    family = exgaussian(),    init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_exgauss <- brms::add_criterion(m_exgauss, \"loo\")   saveRDS(m_exgauss, file = \"models/m_exgauss.rds\") f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_lognormal() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_lognormal <- brm(   f,   prior = priors,   data = df,    stanvars = rt_lognormal_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_lognormal <- brms::add_criterion(m_lognormal, \"loo\")   saveRDS(m_lognormal, file = \"models/m_lognormal.rds\") f <- bf(   RT ~ Condition,   bs ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_invgaussian() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_wald <- brm(   f,   prior = priors,   data = df,    stanvars = rt_invgaussian_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_wald <- brms::add_criterion(m_wald, \"loo\")   saveRDS(m_wald, file = \"models/m_wald.rds\") f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_weibull() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_weibull <- brm(   f,   prior = priors,   data = df,    stanvars = rt_weibull_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_weibull <- brms::add_criterion(m_weibull, \"loo\")   saveRDS(m_weibull, file = \"models/m_weibull.rds\") f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_logweibull() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_logweibull <- brm(   f,   prior = priors,   data = df,    stanvars = rt_logweibull_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_logweibull <- brms::add_criterion(m_logweibull, \"loo\")   saveRDS(m_logweibull, file = \"models/m_logweibull.rds\") f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_invweibull() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_invweibull <- brm(   f,   prior = priors,   data = df,    stanvars = rt_invweibull_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_invweibull <- brms::add_criterion(m_invweibull, \"loo\")   saveRDS(m_invweibull, file = \"models/m_invweibull.rds\") f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_gamma() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_gamma <- brm(   f,   prior = priors,   data = df,    stanvars = rt_gamma_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_gamma <- brms::add_criterion(m_gamma, \"loo\")   saveRDS(m_gamma, file = \"models/m_gamma.rds\") f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_invgamma() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_invgamma <- brm(   f,   prior = priors,   data = df,    stanvars = rt_invgamma_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_invgamma <- brms::add_criterion(m_invgamma, \"loo\")   saveRDS(m_invgamma, file = \"models/m_invgamma.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"normal","dir":"Articles","previous_headings":"","what":"Normal","title":"RT-only Models","text":"basic linear model.","code":"f <- bf(   RT ~ Condition )  m_normal <- brm(f,   data = df,    init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_normal <- brms::add_criterion(m_normal, \"loo\")   saveRDS(m_normal, file = \"models/m_normal.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"exgaussian","dir":"Articles","previous_headings":"","what":"ExGaussian","title":"RT-only Models","text":"","code":"f <- bf(   RT ~ Condition,   sigma ~ Condition,   beta ~ Condition,   family = exgaussian() )  m_exgauss <- brm(f,   data = df,    family = exgaussian(),    init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_exgauss <- brms::add_criterion(m_exgauss, \"loo\")   saveRDS(m_exgauss, file = \"models/m_exgauss.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"shifted-lognormal","dir":"Articles","previous_headings":"","what":"Shifted LogNormal","title":"RT-only Models","text":"","code":"f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_lognormal() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_lognormal <- brm(   f,   prior = priors,   data = df,    stanvars = rt_lognormal_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_lognormal <- brms::add_criterion(m_lognormal, \"loo\")   saveRDS(m_lognormal, file = \"models/m_lognormal.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"inverse-gaussian-shifted-wald","dir":"Articles","previous_headings":"","what":"Inverse Gaussian (Shifted Wald)","title":"RT-only Models","text":"","code":"f <- bf(   RT ~ Condition,   bs ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_invgaussian() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_wald <- brm(   f,   prior = priors,   data = df,    stanvars = rt_invgaussian_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_wald <- brms::add_criterion(m_wald, \"loo\")   saveRDS(m_wald, file = \"models/m_wald.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"weibull","dir":"Articles","previous_headings":"","what":"Weibull","title":"RT-only Models","text":"","code":"f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_weibull() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_weibull <- brm(   f,   prior = priors,   data = df,    stanvars = rt_weibull_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_weibull <- brms::add_criterion(m_weibull, \"loo\")   saveRDS(m_weibull, file = \"models/m_weibull.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"logweibull-shifted-gumbel","dir":"Articles","previous_headings":"","what":"LogWeibull (Shifted Gumbel)","title":"RT-only Models","text":"","code":"f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_logweibull() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_logweibull <- brm(   f,   prior = priors,   data = df,    stanvars = rt_logweibull_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_logweibull <- brms::add_criterion(m_logweibull, \"loo\")   saveRDS(m_logweibull, file = \"models/m_logweibull.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"inverse-weibull-shifted-fréchet","dir":"Articles","previous_headings":"","what":"Inverse Weibull (Shifted Fréchet)","title":"RT-only Models","text":"","code":"f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_invweibull() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_invweibull <- brm(   f,   prior = priors,   data = df,    stanvars = rt_invweibull_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_invweibull <- brms::add_criterion(m_invweibull, \"loo\")   saveRDS(m_invweibull, file = \"models/m_invweibull.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"gamma","dir":"Articles","previous_headings":"","what":"Gamma","title":"RT-only Models","text":"","code":"f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_gamma() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_gamma <- brm(   f,   prior = priors,   data = df,    stanvars = rt_gamma_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_gamma <- brms::add_criterion(m_gamma, \"loo\")   saveRDS(m_gamma, file = \"models/m_gamma.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"inverse-gamma","dir":"Articles","previous_headings":"","what":"Inverse Gamma","title":"RT-only Models","text":"","code":"f <- bf(   RT ~ Condition,   sigma ~ Condition,   tau ~ Condition,   minrt = min(df$RT),   family = rt_invgamma() )  priors <- brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\") |>   brms::validate_prior(f, data = df)  m_invgamma <- brm(   f,   prior = priors,   data = df,    stanvars = rt_invgamma_stanvars(),   init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_invgamma <- brms::add_criterion(m_invgamma, \"loo\")   saveRDS(m_invgamma, file = \"models/m_invgamma.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"model-comparison","dir":"Articles","previous_headings":"","what":"Model Comparison","title":"RT-only Models","text":"can compare models together using loo package, shows CHOCO provides significantly better fit models.  iterations controls actual number iterations used (e.g., point-estimate) keep_iterations number included.","code":"# loo::loo_compare(m_normal, m_exgauss, m_lognormal, m_wald, #                  m_weibull, m_logweibull, m_invweibull, #                  m_gamma, m_invgamma) |> #   parameters(include_ENP = TRUE) rbind(   data_modify(attributes(m_normal$fit)$metadata$time$chain, Model=\"Gaussian\"),   data_modify(attributes(m_exgauss$fit)$metadata$time$chain, Model=\"ExGaussian\"),   data_modify(attributes(m_lognormal$fit)$metadata$time$chain, Model=\"LogNormal\"),   data_modify(attributes(m_wald$fit)$metadata$time$chain, Model=\"Wald\"),   data_modify(attributes(m_weibull$fit)$metadata$time$chain, Model=\"Weibull\"),   data_modify(attributes(m_logweibull$fit)$metadata$time$chain, Model=\"LogWeibull\"),   data_modify(attributes(m_invweibull$fit)$metadata$time$chain, Model=\"InvWeibull\"),   data_modify(attributes(m_gamma$fit)$metadata$time$chain, Model=\"Gamma\"),   data_modify(attributes(m_invgamma$fit)$metadata$time$chain, Model=\"InvGamma\") ) |>    ggplot(aes(x = Model, y = total, fill = Model)) +   geom_boxplot() +   labs(y = \"Sampling Duration (s)\") +   scale_fill_material_d(guide = \"none\") +   # scale_y_log10() +   theme_minimal() pred <- rbind(   estimate_prediction(m_normal, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"Normal\"),   estimate_prediction(m_exgauss, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"ExGaussian\"),   estimate_prediction(m_lognormal, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"LogNormal\"),   estimate_prediction(m_wald, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"InvGaussian\"),   estimate_prediction(m_weibull, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"Weibull\"),   estimate_prediction(m_logweibull, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"LogWeibull\"),   estimate_prediction(m_invweibull, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"InvWeibull\"),   estimate_prediction(m_gamma, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"Gamma\"),   estimate_prediction(m_invgamma, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"InvGamma\") ) #> Loading required namespace: rstan  p <- pred |>    ggplot(aes(x=iter_value)) +   geom_histogram(data = df, aes(x=RT, y = after_stat(density), fill = Condition),                   position = \"identity\", bins=120, alpha = 0.8) +   geom_line(aes(color=Model, group=interaction(Condition, iter_group)), stat=\"density\", alpha=0.2) +   theme_minimal() +   facet_wrap(~Model) +   coord_cartesian(xlim = c(0, 2)) +   scale_fill_manual(values = c(\"darkgreen\", \"darkred\")) +   scale_color_material_d(guide = \"none\") +   labs(x = \"RT (s)\") p"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"model-fit","dir":"Articles","previous_headings":"","what":"Model Fit","title":"RT-only Models","text":"can compare models together using loo package, shows CHOCO provides significantly better fit models.","code":"# loo::loo_compare(m_normal, m_exgauss, m_lognormal, m_wald, #                  m_weibull, m_logweibull, m_invweibull, #                  m_gamma, m_invgamma) |> #   parameters(include_ENP = TRUE)"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"sampling-duration","dir":"Articles","previous_headings":"","what":"Sampling Duration","title":"RT-only Models","text":"","code":"rbind(   data_modify(attributes(m_normal$fit)$metadata$time$chain, Model=\"Gaussian\"),   data_modify(attributes(m_exgauss$fit)$metadata$time$chain, Model=\"ExGaussian\"),   data_modify(attributes(m_lognormal$fit)$metadata$time$chain, Model=\"LogNormal\"),   data_modify(attributes(m_wald$fit)$metadata$time$chain, Model=\"Wald\"),   data_modify(attributes(m_weibull$fit)$metadata$time$chain, Model=\"Weibull\"),   data_modify(attributes(m_logweibull$fit)$metadata$time$chain, Model=\"LogWeibull\"),   data_modify(attributes(m_invweibull$fit)$metadata$time$chain, Model=\"InvWeibull\"),   data_modify(attributes(m_gamma$fit)$metadata$time$chain, Model=\"Gamma\"),   data_modify(attributes(m_invgamma$fit)$metadata$time$chain, Model=\"InvGamma\") ) |>    ggplot(aes(x = Model, y = total, fill = Model)) +   geom_boxplot() +   labs(y = \"Sampling Duration (s)\") +   scale_fill_material_d(guide = \"none\") +   # scale_y_log10() +   theme_minimal()"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/rt_models.html","id":"posterior-predictive-check","dir":"Articles","previous_headings":"","what":"Posterior Predictive Check","title":"RT-only Models","text":"iterations controls actual number iterations used (e.g., point-estimate) keep_iterations number included.","code":"pred <- rbind(   estimate_prediction(m_normal, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"Normal\"),   estimate_prediction(m_exgauss, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"ExGaussian\"),   estimate_prediction(m_lognormal, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"LogNormal\"),   estimate_prediction(m_wald, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"InvGaussian\"),   estimate_prediction(m_weibull, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"Weibull\"),   estimate_prediction(m_logweibull, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"LogWeibull\"),   estimate_prediction(m_invweibull, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"InvWeibull\"),   estimate_prediction(m_gamma, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"Gamma\"),   estimate_prediction(m_invgamma, keep_iterations = 50, iterations = 50) |>     reshape_iterations() |>     data_modify(Model = \"InvGamma\") ) #> Loading required namespace: rstan  p <- pred |>    ggplot(aes(x=iter_value)) +   geom_histogram(data = df, aes(x=RT, y = after_stat(density), fill = Condition),                   position = \"identity\", bins=120, alpha = 0.8) +   geom_line(aes(color=Model, group=interaction(Condition, iter_group)), stat=\"density\", alpha=0.2) +   theme_minimal() +   facet_wrap(~Model) +   coord_cartesian(xlim = c(0, 2)) +   scale_fill_manual(values = c(\"darkgreen\", \"darkred\")) +   scale_color_material_d(guide = \"none\") +   labs(x = \"RT (s)\") p"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/subjective_ratings.html","id":"simulate-data","dir":"Articles","previous_headings":"","what":"Simulate Data","title":"Subjective Ratings","text":"","code":"df <- data.frame() for(x in seq(0.1, 0.9, by = 0.1)) {   df <- data.frame(x = x,                    score = rchoco(n = 100, p = 0.4 + x / 2, confright = 0.4 + x / 3,                                    confleft = 1-x, pex = 0.03, bex = 0.6, pmid = 0)) |>      rbind(df) }  df |>   ggplot(aes(x = score, y = after_stat(density))) +   geom_histogram(bins = 100, fill = \"#2196F3\") +   labs(title = \"Rating Distribution\", x = \"Score\", y = \"Density\") +   theme_minimal()"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/subjective_ratings.html","id":"models","dir":"Articles","previous_headings":"","what":"Models","title":"Subjective Ratings","text":"Zero-One Inflated Beta (ZOIB) model assumes data can modeled mixture two logistic regression processes boundary values (0 1) beta regression process continuous proportions -. Kosmidis & Zeileis (2024) introduce generalization classic beta regression model extended support [0, 1]. Specifically, extended-support beta distribution (xbeta) leverages underlying symmetric four-parameter beta distribution exceedence parameter nu obtain support [-nu, 1 + nu] subsequently censored [0, 1] order obtain point masses boundary values 0 1. Beta-Gate model corresponds reparametrized Ordered Beta model (Kubinec, 2023). model, observed 0s 1s represent instances underlying continuous response tendency fell beyond lower upper boundary points (‘gates’). See documentation Choice-Confidence (CHOCO).","code":"f <- bf(   score ~ x,   phi ~ x,   zoi ~ x,   coi ~ x,    family = zero_one_inflated_beta() )  m_zoib <- brm(f,   data = df, family = zero_one_inflated_beta(), init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_zoib <- brms::add_criterion(m_zoib, \"loo\")  # For later model comparison  saveRDS(m_zoib, file = \"models/m_zoib.rds\") f <- bf(   score ~ x,   phi ~ x,   kappa ~ x,    family = xbeta() )  m_xbx <- brm(f,   data = df, family = xbeta(), init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_xbx <- brms::add_criterion(m_xbx, \"loo\")  # For later model comparison  saveRDS(m_xbx, file = \"models/m_xbx.rds\") f <- bf(   score ~ x,   phi ~ x,   pex ~ x,   bex ~ x,    family = betagate() )  m_betagate <- brm(f,   data = df, family = betagate(), stanvars = betagate_stanvars(), init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_betagate <- brms::add_criterion(m_betagate, \"loo\")  # For later model comparison  saveRDS(m_betagate, file = \"models/m_betagate.rds\") f <- bf(   score ~ x,   confright ~ x,   confleft ~ x,   precright ~ x,   precleft ~ x,   pex ~ x,   bex ~ x,   pmid = 0,    family = choco() )  m_choco <- brm(f,   data = df, family = choco(), stanvars = choco_stanvars(), init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_choco <- brms::add_criterion(m_choco, \"loo\")  # For later model comparison  saveRDS(m_choco, file = \"models/m_choco.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/subjective_ratings.html","id":"zoib-model","dir":"Articles","previous_headings":"","what":"ZOIB Model","title":"Subjective Ratings","text":"Zero-One Inflated Beta (ZOIB) model assumes data can modeled mixture two logistic regression processes boundary values (0 1) beta regression process continuous proportions -.","code":"f <- bf(   score ~ x,   phi ~ x,   zoi ~ x,   coi ~ x,    family = zero_one_inflated_beta() )  m_zoib <- brm(f,   data = df, family = zero_one_inflated_beta(), init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_zoib <- brms::add_criterion(m_zoib, \"loo\")  # For later model comparison  saveRDS(m_zoib, file = \"models/m_zoib.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/subjective_ratings.html","id":"xbx-model","dir":"Articles","previous_headings":"","what":"XBX Model","title":"Subjective Ratings","text":"Kosmidis & Zeileis (2024) introduce generalization classic beta regression model extended support [0, 1]. Specifically, extended-support beta distribution (xbeta) leverages underlying symmetric four-parameter beta distribution exceedence parameter nu obtain support [-nu, 1 + nu] subsequently censored [0, 1] order obtain point masses boundary values 0 1.","code":"f <- bf(   score ~ x,   phi ~ x,   kappa ~ x,    family = xbeta() )  m_xbx <- brm(f,   data = df, family = xbeta(), init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_xbx <- brms::add_criterion(m_xbx, \"loo\")  # For later model comparison  saveRDS(m_xbx, file = \"models/m_xbx.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/subjective_ratings.html","id":"beta-gate-model","dir":"Articles","previous_headings":"","what":"Beta-Gate Model","title":"Subjective Ratings","text":"Beta-Gate model corresponds reparametrized Ordered Beta model (Kubinec, 2023). model, observed 0s 1s represent instances underlying continuous response tendency fell beyond lower upper boundary points (‘gates’).","code":"f <- bf(   score ~ x,   phi ~ x,   pex ~ x,   bex ~ x,    family = betagate() )  m_betagate <- brm(f,   data = df, family = betagate(), stanvars = betagate_stanvars(), init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_betagate <- brms::add_criterion(m_betagate, \"loo\")  # For later model comparison  saveRDS(m_betagate, file = \"models/m_betagate.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/articles/subjective_ratings.html","id":"choco-model","dir":"Articles","previous_headings":"","what":"CHOCO Model","title":"Subjective Ratings","text":"See documentation Choice-Confidence (CHOCO).","code":"f <- bf(   score ~ x,   confright ~ x,   confleft ~ x,   precright ~ x,   precleft ~ x,   pex ~ x,   bex ~ x,   pmid = 0,    family = choco() )  m_choco <- brm(f,   data = df, family = choco(), stanvars = choco_stanvars(), init = 0,   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_choco <- brms::add_criterion(m_choco, \"loo\")  # For later model comparison  saveRDS(m_choco, file = \"models/m_choco.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dominique Makowski. Author, maintainer.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Makowski D (2025). cogmod: Cognitive Models Subjective Scales Decision Making Tasks R. R package version 0.0.18, https://github.com/DominiqueMakowski/cogmod.","code":"@Manual{,   title = {cogmod: Cognitive Models for Subjective Scales and Decision Making Tasks in R},   author = {Dominique Makowski},   year = {2025},   note = {R package version 0.0.18},   url = {https://github.com/DominiqueMakowski/cogmod}, }"},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"cogmod","dir":"","previous_headings":"","what":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"Cognitive Models Subjective Scales Decision Making Tasks R","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"package much totally exploratory - currently made needs. ’s meant stable robust stage. Use risks. suggestions improvement, please get touch! interested Sequential Sampling Models, see amazing Julia package See also attempt creating tutorials","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"","code":"if (!requireNamespace(\"remotes\", quietly = TRUE)) install.packages(\"remotes\")  remotes::install_github(\"DominiqueMakowski/cogmod\")"},{"path":[]},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"choco-model","dir":"","previous_headings":"Main Distributions","what":"CHOCO Model","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"Choice-Confidence (CHOCO) model useful model data subjective ratings, Likert-type analog scales, left right side correspond different processes higher order categorical responses (e.g., “disagree” vs. “agree”, “true” vs. “false”). can used jointly model choice (left right) confidence (degree left right).","code":"library(ggplot2) library(patchwork) library(cogmod)  # Simulate data using rchoco() with two parameter sets df1 <- rchoco(n = 5000, confright = 0.8, confleft = 0.7, pex = 0.05) df2 <- rchoco(n = 5000, confright = 0.3, confleft = 0.3, pex = 0.1) df3 <- rchoco(n = 5000, confright = 0.3, confleft = 0.3, pex = 0.1,                 precright = 1.5, precleft = 1.5, pmid = 0.01)  # Combine data into a single data frame df <- data.frame(   value = c(df1, df2, df3),   group = rep(c(     \"confright = 0.5, confleft = 0.4, pex = 0.2\",     \"confright = 0.7, confleft = 0.6, pex = 0.1\",     \"confright = 0.3, confleft = 0.3, pex = 0.1\"   ), each = 5000) )  # Create the histogram ggplot(df, aes(x = value, fill = group)) +   geom_histogram(alpha = 0.8, position = \"identity\", bins = 70) +   labs(title = \"CHOCO Distribution\", x = \"Value\", y = \"\", fill = \"Parameters\") +   theme_minimal() +   scale_fill_manual(values = c(\"#E91E63\", \"#9C27B0\", \"#FF9800\"))"},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"beta-gate","dir":"","previous_headings":"Main Distributions","what":"Beta-Gate","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"Beta-Gate model corresponds reparametrized ordered beta model (Kubinec, 2023). ordered Beta model, extreme values (0 1) arise censoring underlying latent process based cutpoints (“gates”). Values falling past gates considered extremes (zeros ones). difference Ordered Beta way cutpoints defined, well scale precision parameter phi.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"lnr-model","dir":"","previous_headings":"Main Distributions","what":"LNR Model","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"Log-Normal Race (LNR) model useful modeling reaction times errors decision-making tasks. model assumes accumulator draws value LogNormal distribution (shifted non-decision time τ). winning accumulator (minimum draw) determines observed reaction time choice.","code":"# Simulate data using rlnr() lnr_data <- rlnr(n = 5000, nuzero = 1, nuone = 0.5, sigmazero = 1, sigmaone = 0.5, ndt = 0.2)  # Create histograms for each choice ggplot(lnr_data, aes(x = rt, fill = factor(response))) +   geom_histogram(alpha = 0.8, position = \"identity\", bins = 50) +   labs(title = \"LogNormal Race Model\", x = \"Reaction Time\", y = \"Frequency\", fill = \"Choice\") +   theme_minimal() +   scale_fill_manual(values = c(\"#4CAF50\", \"#FF5722\"))"},{"path":[]},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"subjective-ratings","dir":"","previous_headings":"Usage with brms","what":"Subjective Ratings","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"See tutorial","code":""},{"path":[]},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"rt-only-models","dir":"","previous_headings":"Usage with brms > Cognitive Tasks","what":"RT-only Models","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"See tutorial","code":""},{"path":[]},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"simulate-data","dir":"","previous_headings":"Usage with brms > Cognitive Tasks > Decision Making (Choice + RT)","what":"Simulate Data","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"","code":"df <- rlnr(n = 3000, nuzero = 0.2, nuone = 0, sigmazero = 0.8, sigmaone = 0.5, ndt = 0.2) |>    datawizard::data_filter(rt < 5)  df |>   ggplot(aes(x = rt, fill = factor(response))) +   geom_histogram(alpha = 0.8, position = \"identity\", bins = 100) +   labs(title = \"RT Distribution\", x = \"Reaction Time\", y = \"Frequency\", fill = \"Choice\") +   theme_minimal() +   scale_fill_manual(values = c(\"#009688\", \"#E91E63\")) dfcorrect <- df[df$response == 0,]"},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"drift-diffusion-model-ddm","dir":"","previous_headings":"Usage with brms > Cognitive Tasks > Decision Making (Choice + RT)","what":"Drift Diffusion Model (DDM)","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"","code":"f <- bf(   rt | dec(response) ~ 1,   bs ~ 1,   bias ~ 1,   tau ~ 1,   minrt = min(df$rt),   family = ddm() )  m_ddm <- brm(f,   data = df,   init = 0,   family = ddm(),   stanvars = ddm_stanvars(),   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_ddm <- brms::add_criterion(m_ddm, \"loo\")   saveRDS(m_ddm, file = \"man/figures/m_ddm.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"linear-ballistic-accumulator-lba","dir":"","previous_headings":"Usage with brms > Cognitive Tasks > Decision Making (Choice + RT)","what":"Linear Ballistic Accumulator (LBA)","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"","code":"f <- bf(   rt | dec(response) ~ 1,   vdelta ~ 1,   sigmazero ~ 1,   sigmadelta ~ 1,   A ~ 1,    k ~ 1,   tau ~ 1,   minrt = min(df$rt),   family = lba() )  priors <- c(     brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"tau\"),     brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"A\"),     brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"k\"),     brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"\"),     brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"vdelta\"),     brms::set_prior(\"normal(0, 1)\", class = \"Intercept\", dpar = \"sigmazero\")   ) |>     brms::validate_prior(f, data = df)   m_lba <- brm(f,   data = df,   init = 1,   prior = priors,   family = lba(),   stanvars = lba_stanvars(),   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_lba <- brms::add_criterion(m_lba, \"loo\")  saveRDS(m_lba, file = \"man/figures/m_lba.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"lognormal-race-lnr","dir":"","previous_headings":"Usage with brms > Cognitive Tasks > Decision Making (Choice + RT)","what":"LogNormal Race (LNR)","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"","code":"f <- bf(   rt | dec(response) ~ 1,   nuone ~ 1,   sigmazero ~ 1,   sigmaone ~ 1,   tau ~ 1,   minrt = min(df$rt),   family = lnr() )  m_lnr <- brm(f,   data = df,   init = 0,   family = lnr(),   stanvars = lnr_stanvars(),   chains = 4, iter = 500, backend = \"cmdstanr\" )  m_lnr <- brms::add_criterion(m_lnr, \"loo\")  saveRDS(m_lnr, file = \"man/figures/m_lnr.rds\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/index.html","id":"model-comparison","dir":"","previous_headings":"Usage with brms > Cognitive Tasks > Decision Making (Choice + RT)","what":"Model Comparison","title":"Cognitive Models for Subjective Scales and Decision Making Tasks in R","text":"","code":"m_ddm <- readRDS(\"man/figures/m_ddm.rds\") m_lnr <- readRDS(\"man/figures/m_lnr.rds\")  loo::loo_compare(m_ddm, m_lnr) |>    parameters::parameters() pred <- estimate_prediction(m_lnr, data = df, iterations = 100, keep_iterations = TRUE) |>   as.data.frame() |>    reshape_iterations() |>    datawizard::data_select(select = c(\"Row\", \"Component\", \"iter_value\", \"iter_group\", \"iter_index\"))  |>   datawizard::data_to_wide(id_cols=c(\"Row\", \"iter_group\"), values_from=\"iter_value\", names_from=\"Component\") pred <- datawizard::data_filter(pred, \"rt < 4\")   .density_rt_response <- function(rt, response, length.out = 100) {   rt_choice0 <- rt[response == 0]   rt_choice1 <- rt[response == 1]   xaxis <- seq(0, max(rt_choice0, rt_choice1)* 1.1, length.out = length.out)      insight::check_if_installed(\"logspline\")   rbind(     data.frame(x = xaxis,                 y = logspline::dlogspline(xaxis, logspline::logspline(rt_choice0)),                response = 0),     data.frame(x = xaxis,                y = -logspline::dlogspline(xaxis, logspline::logspline(rt_choice1)),                response = 1)   ) }  density_rt_response <- function(data, rt=\"rt\", response=\"response\", by=NULL, length.out = 100) {   if (is.null(by)) {     out <- .density_rt_response(data[[rt]], data[[response]], length.out = length.out)   } else {     out <- sapply(split(data, data[[by]]), function(x) {       d <- .density_rt_response(x[[rt]], x[[response]], length.out = length.out)       d[[by]] <- x[[by]][1]       d       }, simplify = FALSE)     out <- do.call(rbind, out)     out[[by]] <- as.factor(out[[by]])   }   out[[response]] <- as.factor(out[[response]])   row.names(out) <- NULL   out }      dat <- density_rt_response(pred, rt=\"rt\", response=\"response\", by=\"iter_group\")  df |>    ggplot(aes(x=rt)) +   geom_histogram(data=df[df$response == 0,], aes(y=after_stat(density)), fill=\"darkgreen\", bins=100) +   geom_histogram(data=df[df$response == 1,], aes(y=after_stat(-density)), fill=\"darkred\", bins=100) +   geom_line(data=dat, aes(x=x, y=y, color = response, group =  interaction(response, iter_group)), alpha=0.1) +   scale_color_manual(values = c(\"green\", \"red\")) +   theme_minimal()"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/dot-dwald.html","id":null,"dir":"Reference","previous_headings":"","what":"Analytical PDF for Wald with Uniform Start Point Variability — .dwald","title":"Analytical PDF for Wald with Uniform Start Point Variability — .dwald","text":"Calculates probability density function (PDF) time takes diffusion process drift drift, starting point z ~ U(0, bias), reach threshold b = bs + bias, shifted ndt. Based Tillman et al. (2020). function calculates density unadjusted time x.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/dot-dwald.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analytical PDF for Wald with Uniform Start Point Variability — .dwald","text":"","code":".dwald(x, drift, bs, bias, ndt, log = FALSE)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/dot-pwald.html","id":null,"dir":"Reference","previous_headings":"","what":"Analytical CDF for Wald with Uniform Start Point Variability — .pwald","title":"Analytical CDF for Wald with Uniform Start Point Variability — .pwald","text":"Calculates cumulative distribution function (CDF) time takes diffusion process drift drift, starting point z ~ U(0, bias), reach threshold b = bs + bias, shifted ndt. Based Tillman et al. (2020). function calculates CDF unadjusted time x.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/dot-pwald.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analytical CDF for Wald with Uniform Start Point Variability — .pwald","text":"","code":".pwald(x, drift, bs, bias, ndt, lower.tail = TRUE, log.p = FALSE)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/dot-rordbeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Ordered Beta Variates — .rordbeta","title":"Generate Ordered Beta Variates — .rordbeta","text":"function generate ordered beta random variates given values mean (mu), dispersion (phi) cutpoints governing ratio degenerate (discrete) continuous responses.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/dot-rordbeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Ordered Beta Variates — .rordbeta","text":"","code":".rordbeta(n = 100, mu = 0.5, phi = 1, cutzero = -1, cutone = 1)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/dot-rordbeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Ordered Beta Variates — .rordbeta","text":"n Number variates generate. mu Value mean distribution. \\(0,1\\) interval (strictly equal 0 1). length greater 1, length n. phi Value dispersion parameter. strictly greater 0. length greater 1, length n. cutzero, cutone Two numeric values cutpoints logit scale. Second value strictly greater first value.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/dot-rordbeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Ordered Beta Variates — .rordbeta","text":"vector length n variates ordered beta distribution.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rbetagate.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-Gate Model — rbetagate","title":"Beta-Gate Model — rbetagate","text":"Beta-Gate model represents subjective ratings mixture continuous Beta distribution additional point masses extremes (0 1). structure effectively captures common patterns subjective rating data respondents often select extreme values higher rates expected Beta distribution alone. Beta-Gate model corresponds reparametrized ordered beta model (Kubinec, 2023). ordered Beta model, extreme values (0 1) arise censoring underlying latent process based cutpoints (\"gates\"). Values falling past gates considered extremes (zeros ones). difference Ordered Beta way cutpoints defined, well scale precision parameter phi. differs Zero-One-Inflated Beta (ZOIB) model ZOIB model zoi coi parameters, directly controlling likelihood extreme values. Instead, Beta-Gate uses pex bex define \"cutpoints\" extreme values become likely. ordered beta framework, boundary probabilities arise single underlying ordering process (location cutpoints latent scale). ZOIB framework, boundaries like additional mass points inserted beta distribution. Beta-gate models, extreme values arise naturally thresholding single latent process.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rbetagate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-Gate Model — rbetagate","text":"","code":"rbetagate(n, mu = 0.5, phi = 3, pex = 0.1, bex = 0.5)  dbetagate(x, mu = 0.5, phi = 3, pex = 0.1, bex = 0.5, log = FALSE)  betagate_lpdf_expose()  betagate_stanvars()  betagate(   link_mu = \"logit\",   link_phi = \"softplus\",   link_pex = \"logit\",   link_bex = \"logit\" )  log_lik_betagate(i, prep)  posterior_predict_betagate(i, prep, ...)  posterior_epred_betagate(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rbetagate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-Gate Model — rbetagate","text":"n Number simulated values. mu Mean underlying Beta distribution (0 < mu < 1). phi Precision parameter underlying Beta distribution (phi > 0). Note: precision = phi * 2. phi = 1 corresponds uniform mu = 0.5. pex Controls location lower upper boundary gates (0 <= pex <= 1). defines total probability mass allocated extremes (0 1).  Higher pex increases probability extreme values (0 1). bex Balances extreme probability mass pex 0 1 (0 <= bex <= 1). balance 0.5 means 'gates' symmetrically placed around center distribution, values higher lower 0.5 shift relative \"ease\" crossing gates towards 1 0, respectively. x Vector quantiles (values evaluate density). Must 0 1, inclusive. log Logical; TRUE, returns log-density. link_mu, link_phi, link_pex, link_bex Link functions parameters. , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rbetagate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-Gate Model — rbetagate","text":"vector simulated outcomes range 0-1.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rbetagate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Beta-Gate Model — rbetagate","text":"Special cases: pex = 0: Pure Beta distribution mean mu precision phi * 2. pex = 1: Pure Bernoulli distribution P(1) = bex, P(0) = 1-bex. bex = 0 pex = 1: mass 0. bex = 1 pex = 1: mass 1. Psychological Interpretation: mu: Can interpreted underlying average tendency preference strength, disregarding extreme \"--nothing\" responses. phi: Reflects certainty consistency non-extreme responses. Higher phi indicates responses tightly clustered around mu (certainty), lower phi (especially phi = 1) suggests uniform uncertain responses. pex: Represents overall tendency towards extreme responding (choosing 0 1). reflect individual response styles (e.g., acquiescence, yea-saying/nay-saying) properties item (e.g., polarizing questions). bex: Indicates direction extreme response bias. bex > 0.5 suggests bias producing ones easily, bex < 0.5 suggests bias towards zero.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rbetagate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beta-Gate Model — rbetagate","text":"Kubinec, R. (2023). Ordered beta regression: parsimonious, well-fitting model continuous data lower upper bounds. Political Analysis, 31(4), 519-536.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rbetagate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta-Gate Model — rbetagate","text":"","code":"# Symmetric gates (c0=0.05, c1=0.95), pex=0.1, bex=0.5 x1 <- rbetagate(10000, mu = 0.5, phi = 3, pex = 0.1, bex = 0.5) # hist(x1, breaks=50, main=\"rbetagate: Symmetric Cutpoints (pex=0.1)\")  # Asymmetric gates (c0=0.15, c1=0.95), pex=0.2, bex=0.25 x2 <- rbetagate(10000, mu = 0.5, phi = 3, pex = 0.2, bex = 0.25) # hist(x2, breaks=50, main=\"rbetagate: Asymmetric Cutpoints (pex=0.2, bex=0.25)\")  # No gating (pure Beta) x3 <- rbetagate(10000, mu = 0.7, phi = 5, pex = 0, bex = 0.5) # hist(x3, breaks=50, main=\"rbetagate: No Extreme Values (pex=0)\")  x <- seq(0, 1, length.out = 1001) densities <- dbetagate(x, mu = 0.5, phi = 5, pex = 0.2, bex = 0.5) plot(x, densities, type = \"l\", main = \"Density Function\", xlab = \"y\", ylab = \"Density\")  # You can expose the lpdf function as follows: # betagate_lpdf <- betagate_lpdf_expose() # betagate_lpdf(y = 0.5, mu = 0.6, phi = 10, pex = 0.2, bex = 0.5)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rchoco.html","id":null,"dir":"Reference","previous_headings":"","what":"Choice-Confidence (CHOCO) Model — rchoco","title":"Choice-Confidence (CHOCO) Model — rchoco","text":"Simulates data Choice-Confidence (CHOCO) model. model useful subjective ratings (e.g., Likert-type scales) responses represent choice two underlying categories (e.g., \"disagree\" vs. \"agree\") along degree confidence intensity. CHOCO model divides response scale middle-value. Responses middle modeled two rescaled (mirrored left side) Beta-Gate distributions. Beta-Gate distributions, extreme values (0 1) generated \"lumping\" values crossed threshold (\"gate\"). location gates center distribution controlled pex bex parameters, influecing ease crossing gate (thus probability extreme values).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rchoco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choice-Confidence (CHOCO) Model — rchoco","text":"","code":"rchoco(   n,   p = 0.5,   confright = 0.5,   precright = 4,   confleft = 0.5,   precleft = 4,   pex = 0.1,   bex = 0.5,   pmid = 0,   mid = 0.5 )  dchoco(   x,   p = 0.5,   confright = 0.5,   precright = 4,   confleft = 0.5,   precleft = 4,   pex = 0.1,   bex = 0.5,   pmid = 0,   mid = 0.5,   log = FALSE )  choco_lpdf_expose()  choco_stanvars()  choco(   link_mu = \"logit\",   link_confright = \"logit\",   link_precright = \"softplus\",   link_confleft = \"logit\",   link_precleft = \"softplus\",   link_pex = \"logit\",   link_bex = \"logit\",   link_pmid = \"logit\" )  log_lik_choco(i, prep)  posterior_predict_choco(i, prep, ...)  posterior_epred_choco(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rchoco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choice-Confidence (CHOCO) Model — rchoco","text":"n Number simulated trials. p Proportion parameter determining balance left right sides excluding probability mass middle (pmid). P(Right Side | Middle) = p. confright, confleft Mean parameter (mu) underlying Beta-Gate distribution right side left side, respectively. Represents confidence towards 1. 0 < confright < 1. precright, precleft Precision parameter (phi) underlying Beta-Gate distribution right side left side, respectively. Must positive. Higher values indicate concentrated distributions, value 1 corresponds uniform distribution. pex Controls location lower upper boundary gates (0 <= pex <= 1). defines total probability mass allocated extremes (0 1).  Higher pex increases probability extreme values (0 1). bex Balances extreme probability mass pex 0 1 (0 <= bex <= 1). balance 0.5 means 'gates' symmetrically placed around center distribution, values higher lower 0.5 shift relative \"ease\" crossing gates towards 1 0, respectively. pmid Probability mass exactly mid. determines proportion trials output directly assigned value mid, bypassing left right components. mid point dividing scale (0 < mid < 1). Typically set 0.5. Note Stan implementation, mid fixed 0.5 available parameter. x Vector quantiles (values evaluate density). Must 0 1, inclusive. log Logical; TRUE, returns log-density. link_mu, link_confright, link_precright, link_confleft, link_precleft, link_pex, link_bex, link_pmid Link functions parameters. , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rchoco.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Choice-Confidence (CHOCO) Model — rchoco","text":"Psychological Interpretation: p: Represents overall tendency choose \"right\" category (e.g., \"agree\") \"left\" category (e.g., \"disagree\"), given choice made (.e., responding exactly mid). confright confleft: Average confidence level choosing \"right\" \"left\" category. Higher values (closer 1) indicate stronger confidence agreement towards extreme end scale. precright precleft: Certainty consistency confidence ratings right left choices, respectively. Higher values indicate less variability confidence ratings around respective means (confright, confleft). pex: Represents overall tendency towards extreme responding (choosing 0 1). reflect individual response styles (e.g., acquiescence, yea-saying/nay-saying) properties item (e.g., polarizing questions). bex: Indicates direction extreme response bias. bex > 0.5 suggests bias producing ones easily, bex < 0.5 suggests bias towards zero.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rchoco.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Choice-Confidence (CHOCO) Model — rchoco","text":"Kubinec, R. (2023). Ordered beta regression: parsimonious, well-fitting model continuous data lower upper bounds. Political Analysis, 31(4), 519-536. (Describes underlying ordered beta model)","code":""},{"path":[]},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rchoco.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Choice-Confidence (CHOCO) Model — rchoco","text":"","code":"# Simulate data with different parameterizations # 10% at mid, 50/50 split otherwise, symmetric confidence/precision x1 <- rchoco(n=5000, p = 0.5, confright = 0.5, precright = 4,   confleft = 0.5, precleft = 4, pex = 0.1, bex = 0.5, pmid = 0, mid = 0.5) # hist(x1, breaks = 50, main = \"CHOCO: Symmetric Confidence/Precision\", xlab = \"y\")  # No mid mass, 70% probability on right, higher confidence left (closer to 0) x2 <- rchoco(n=5000, p = 0.7, confright = 0.5, precright = 3,   confleft = 0.8, precleft = 5, pex = 0.15, bex = 0.7, pmid = 0, mid = 0.5) # hist(x2, breaks = 50, main = \"CHOCO: Asymmetric p, Higher Conf Left\", xlab = \"y\")  # Lower confidence overall (closer to mid), high probability in the middle x3 <- rchoco(n=5000, p = 0.5, confright = 0.2, precright = 3,   confleft = 0.2, precleft = 3, pex = 0, bex = 0.5, pmid = 0.05, mid = 0.5) # hist(x3, breaks = 50, main = \"CHOCO: Low confidence overall\", xlab = \"y\") if (FALSE) { # \\dontrun{ # Example usage in brm formula: # bf(y ~ x1 + (1|group), #    confright ~ x3, #    confleft ~ x3, #    precright ~ 1, #    precleft ~ 1, #    pex ~ s(age), #    bex ~ 1, #    pmid ~ 1, #    family = choco()) } # }"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rddm.html","id":null,"dir":"Reference","previous_headings":"","what":"Drift Diffusion Model (DDM) — rddm","title":"Drift Diffusion Model (DDM) — rddm","text":"Drift Diffusion Model (DDM) widely used model decision-making tasks. assumes evidence accumulates time reaches one two decision boundaries. 'ddm' family package full re-implementation DDM, uses brms wiener family. simply reparametrized version consistency race models package.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rddm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drift Diffusion Model (DDM) — rddm","text":"","code":"rddm(n, drift, bs, bias, ndt, backend = \"rtdists\", ...)  dddm(x, drift, bs, bias, ndt, response, log = FALSE, backend = \"Rwiener\", ...)  ddm_lpdf_expose()  ddm_stanvars()  ddm(   link_mu = \"identity\",   link_bs = \"softplus\",   link_bias = \"logit\",   link_tau = \"logit\",   link_minrt = \"identity\" )  log_lik_ddm(i, prep, ...)  posterior_epred_ddm(prep)  posterior_predict_ddm(i, prep, ...)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rddm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drift Diffusion Model (DDM) — rddm","text":"n Number simulated trials. Must positive integer. drift Drift rate. Can take real value. bs Decision threshold (boundary separation). Must positive. bias Starting point bias (proportion boundary separation). Must (0, 1). ndt Non-decision time. Must non-negative. backend backend use simulation. Based local benchmarks, \"rtdists\" much faster simulation \"Rwiener\" faster density computation. ... arguments passed brms::rwiener() brms::dwiener(), x observed reaction time (RT). Must greater ndt. response decision indicator (0 1). 0 choice 0, 1 choice 1. log Logical; TRUE, returns log-density. Default: FALSE. link_mu, link_bs, link_bias, link_tau, link_minrt Link functions parameters. , prep brms' functions run: index observation brms preparation object.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rddm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drift Diffusion Model (DDM) — rddm","text":"","code":"# Simulate data # data <- rddm(1000, drift = 0.2, bs = 1, bias = 0.5, ndt = 0.3) # hist(data[data$response == 0, \"rt\"], breaks = 50, main = \"Reaction Times\", xlab = \"RT\") # hist(data[data$response == 1, \"rt\"], breaks = 50, add = TRUE, col = rgb(1, 0, 0, 0.5))  # Compute density # dddm(x = c(0.5, 0.7), drift = 0.2, bs = 1, bias = 0.5, resp = c(0, 1), ndt = 0.3)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlba.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Ballistic Accumulator (LBA) Model Simulation — rlba","title":"Linear Ballistic Accumulator (LBA) Model Simulation — rlba","text":"Simulates random draws (reaction times choices) two-choice Linear Ballistic Accumulator (LBA) model. parametrization, accumulator independent drift rate distribution: Accumulator 0 drift drawn N(driftzero, sigmazero^2). Accumulator 1 drift drawn N(driftone, sigmaone^2). trial, drift rates sampled individual basis least one two positive. starting point accumulator sampled uniformly (0, sigmabias). decision threshold defined sigmabias + bs. decision time accumulator calculated (b - start)/drift, drift positive, decision time set Inf. winning accumulator (one whose decision time minimal) determines response, final reaction time sum decision time fixed non-decision time (ndt).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Ballistic Accumulator (LBA) Model Simulation — rlba","text":"","code":"rlba(   n,   driftzero = 3,   driftone = 3,   sigmazero = 1,   sigmaone = 1,   sigmabias = 0.5,   bs = 0.5,   ndt = 0.3,   max_iter = 100 )  dlba(   x,   driftzero = 3,   driftone = 3,   sigmazero = 1,   sigmaone = 1,   sigmabias = 0.5,   bs = 0.5,   ndt = 0.3,   response,   log = FALSE )  lba_lpdf_expose()  lba_stanvars()  lba(   link_mu = \"identity\",   link_driftone = \"identity\",   link_sigmazero = \"softplus\",   link_sigmaone = \"softplus\",   link_sigmabias = \"softplus\",   link_bs = \"softplus\",   link_tau = \"logit\",   link_minrt = \"identity\" )  log_lik_lba(i, prep)  posterior_predict_lba(i, prep, ...)  posterior_epred_lba(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Ballistic Accumulator (LBA) Model Simulation — rlba","text":"n Number simulated trials. Must positive integer. driftzero Mean drift rate first accumulator (accumulator 0). Range: (-Inf, Inf). driftone Mean drift rate second accumulator (accumulator 1). Range: (-Inf, Inf). sigmazero Standard deviation drift rate first accumulator. Must positive. Range: (0, Inf). sigmaone Standard deviation drift rate second accumulator. Must positive. Range: (0, Inf). sigmabias Maximum starting point uniform distribution starting evidence (0, sigmabias). Must positive. Range: (0, Inf). Default: 0.5. bs Additional amount beyond sigmabias set decision threshold (b = sigmabias + bs). Must positive. Range: (0, Inf). Default: 0.5. ndt Non-decision time, representing processes encoding motor response. Must non-negative. Range: [0, Inf). Default: 0.3. max_iter Maximum iterations allowed (per trial) resampling drift rates non-positive. Default: 100. x observed reaction time (RT). Must greater ndt. response decision indicator (0 1). 0 choice 0, 1 choice 1. log Logical; TRUE, returns log-density. Default: FALSE. link_mu, link_driftone, link_sigmazero, link_sigmaone, link_sigmabias, link_bs, link_tau, link_minrt Link functions parameters. , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlba.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear Ballistic Accumulator (LBA) Model Simulation — rlba","text":"Psychological Interpretation: Drift Rate (driftzero, driftone): Reflects rate evidence accumulates choice. Higher drift rates indicate faster evidence accumulation higher likelihood selecting corresponding choice. Differences drift rates accumulators can represent differences preference, difficulty, bias two options. Drift Rate Variability (sigmazero, sigmaone): Captures trial--trial variability evidence accumulation process. Higher variability indicates less consistent evidence accumulation, leading greater variability reaction times choices. Start Point Variability (sigmabias): Represents range initial evidence levels accumulator. Larger values sigmabias introduce variability reaction times, starting point can vary widely trials. Threshold (b = sigmabias + bs): Boundary separation (bs). Represents amount evidence required make decision. Higher thresholds lead longer reaction times accurate decisions, evidence required choice made. Non-Decision Time (ndt): Accounts processes unrelated evidence accumulation, sensory encoding motor response. parameter shifts reaction times constant amount.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlba.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linear Ballistic Accumulator (LBA) Model Simulation — rlba","text":"Brown, S. D., & Heathcote, . (2008). simplest complete model choice response time: Linear ballistic accumulation. Cognitive Psychology, 57(3), 153-178. doi:10.1016/j.cogpsych.2007.12.002","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlba.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Ballistic Accumulator (LBA) Model Simulation — rlba","text":"","code":"df <- rlba(n = 1000, driftzero = 3, driftone = 2,            sigmazero = 0.5, sigmaone = 0.5,            sigmabias = 0.5, bs = 0.5, ndt = 0.3) hist(df$rt[df$response == 0], breaks = 50, col = rgb(0,0,1,0.5)) hist(df$rt[df$response == 1], breaks = 50, col = rgb(1,0,0,0.5), add = TRUE)   # You can expose the lpdf function as follows: # lba_lpdf <- lba_lpdf_expose() # lba_lpdf(...)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlnr.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-Normal Race (LNR) Model — rlnr","title":"Log-Normal Race (LNR) Model — rlnr","text":"Log-Normal Race (LNR) model useful modeling reaction times choices decision-making tasks. model assumes choice option (accumulator) draws processing time LogNormal distribution. winning accumulator (minimum draw) determines observed reaction time choice. observed RT includes non-decision time component (ndt). Functions: rlnr(): Simulates random draws LNR model. dlnr(): Computes likelihood/density observed reaction times LNR model. lnr(): Creates custom family used brms. lnr_stanvars(): brms, generates stanvars object pass brm() fitting model. posterior_predict_lnr(): brms, simulates predicted outcomes using sampled parameters. log_lik_lnr(): brms, computes log-likelihood observed data.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlnr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-Normal Race (LNR) Model — rlnr","text":"","code":"rlnr(n, nuzero = 0, nuone = 0, sigmazero = 1, sigmaone = 1, ndt = 0.2)  dlnr(x, nuzero, nuone, sigmazero, sigmaone, ndt, response, log = FALSE)  lnr_lpdf_expose()  lnr_stanvars()  lnr(   link_nuzero = \"identity\",   link_nuone = \"identity\",   link_sigmazero = \"softplus\",   link_sigmaone = \"softplus\",   link_tau = \"logit\",   link_minrt = \"identity\" )  log_lik_lnr(i, prep)  posterior_predict_lnr(i, prep, ...)  posterior_epred_lnr(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlnr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-Normal Race (LNR) Model — rlnr","text":"n Number simulated trials. Must positive integer. nuzero, nuone (inverse ) log-space mean parameter accumulators (choice 0 1). Controls central tendency reaction time. Can take real value (-Inf, Inf), larger values leading faster RTs. Named 'nu' (=-meanlog) consistency race models. sigmazero, sigmaone log-space standard deviation accumulators (choice 0 1) Controls variability reaction times. Must positive (0, Inf). Larger values increase variability. ndt Non-decision time (shift parameter). Represents time taken processes unrelated decision (e.g., encoding, motor response). Must non-negative [0, Inf). x observed reaction time (RT). Must greater ndt. response decision indicator (0 1). 0 choice 0, 1 choice 1. log Logical; TRUE, returns log-density. Default: FALSE. link_nuzero, link_nuone Link function nu parameters. link_sigmazero, link_sigmaone Link function sigma parameters. link_tau Link function tau parameter (non-decision time proportion). link_minrt Link function minrt parameter (minimum RT scale). , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlnr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log-Normal Race (LNR) Model — rlnr","text":"LNR model conceptualizes decision-making race two independent accumulators, corresponding potential choice. accumulator's finishing time drawn LogNormal distribution. underlying meanlog parameter LogNormal distribution accumulator 0 -nuzero, accumulator 1 -nuone. sdlog parameters sigmazero sigmaone respectively. first accumulator finish determines choice decision time. observed reaction time (RT) decision time plus non-decision time (ndt). Higher values nuzero nuone correspond faster processing speeds thus shorter reaction times respective accumulator.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlnr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Log-Normal Race (LNR) Model — rlnr","text":"Rouder, J. N., Province, J. M., Morey, R. D., Gomez, P., & Heathcote, . (2015). lognormal race: cognitive-process model choice latency desirable psychometric properties. Psychometrika, 80(2), 491-513.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rlnr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-Normal Race (LNR) Model — rlnr","text":"","code":"# Simulate data data <- rlnr(1000, nuzero = 1, nuone = 0.5, sigmazero = 1, sigmaone = 0.8, ndt = 0.2) hist(data[data$response == 0, \"rt\"], breaks = 50, main = \"Reaction Times\", xlab = \"RT\") hist(data[data$response == 1, \"rt\"], breaks = 50, add = TRUE, col = rgb(1, 0, 0, 0.5))   if (FALSE) { # \\dontrun{ # You can expose the lpdf function as follows: insight::check_if_installed(\"cmdstanr\") lnr_lpdf <- lnr_lpdf_expose() # Example call with nu parameterization (higher nu = faster) lnr_lpdf(Y = 0.5, mu = 0.5, nuone = 0.2, sigmazero = 1.0, sigmaone = 0.8,          tau = 0.4, minrt = 0.2, dec = 0) # ndt = 0.4 * 0.2 = 0.08 } # }"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from the Two-Accumulator Racing Diffusion Model (RDM) — rrdm","title":"Simulate from the Two-Accumulator Racing Diffusion Model (RDM) — rrdm","text":"Simulates choice reaction times two-accumulator Racing Diffusion Model (RDM). specialized version exactly two accumulators race towards common threshold. model assumes variability starting point diffusion process, drawn uniform distribution. version optimized performance using vectorized operations allows one () drift rate zero.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from the Two-Accumulator Racing Diffusion Model (RDM) — rrdm","text":"","code":"rrdm(n, vzero, vone, bs, bias, ndt)  drdm(x, vzero, vone, bs, bias, ndt, log = FALSE)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from the Two-Accumulator Racing Diffusion Model (RDM) — rrdm","text":"n Number trials simulate. Must positive integer. vzero Drift rate first accumulator. Must single non-negative number. vone Drift rate second accumulator. Must single non-negative number. least one vzero vone must positive. bs Threshold parameter, defined bs = b - bias, b decision threshold bias maximum starting point. Must single positive number. bias Maximum starting point parameter. starting point accumulator trial drawn Uniform(0, bias). Must single positive number. ndt Non-decision time (encoding motor time offset). Must single non-negative number. x Vector quantiles (observed reaction times). log Logical; TRUE, probabilities p given log(p).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from the Two-Accumulator Racing Diffusion Model (RDM) — rrdm","text":"bias data frame n rows two columns: rt simulated reaction time (minimum finishing time across two accumulators). choice index winning accumulator (1 vzero, 2 vone).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrdm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate from the Two-Accumulator Racing Diffusion Model (RDM) — rrdm","text":"RDM implemented follows formulation two accumulators drift rates vzero vone. diffusion process starts point z drawn Uniform(0, bias). process terminates either accumulator reaches threshold b. parameter bs defined bs = b - bias, representing distance maximum starting point bias threshold b. Therefore, effective distance threshold given trial bs = b - z = bs + bias - z. finishing time single accumulator, given drift rate v, bs, bias, ndt, simulated : Sampling starting point z ~ Uniform(0, bias). Calculating distance bs = bs + bias - z. v > 0, simulating time reach bs Inverse Gaussian distribution mean bs / v shape bs^2. simulation uses internal implementation based Michael et al. (1976). v = 0, finishing time considered infinite (Inf). Adding non-decision time ndt finite finishing times. function simulates process accumulators using vectorized operations. accumulator finishes first determines choice (1 vzero, 2 vone) reaction time (RT) trial. one drift rate zero, accumulator positive drift rate always win. implementation based description parameters used : Tillman, G., Van Zandt, T., & Logan, G. D. (2020). Sequential sampling models without random -trial variability: racing diffusion model speeded decision making. Psychonomic Bulletin & Review, 27, 911-936. doi:10.3758/s13423-020-01738-8  (specifically matching WaldA component used within RDM simulation).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrdm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate from the Two-Accumulator Racing Diffusion Model (RDM) — rrdm","text":"Michael, J. R., Schucany, W. R., & Haas, R. W. (1976). Generating Random Variates Using Transformations Multiple Roots. American Statistician, 30(2), 88–90. doi:10.2307/2683801 Tillman, G., Van Zandt, T., & Logan, G. D. (2020). Sequential sampling models without random -trial variability: racing diffusion model speeded decision making. Psychonomic Bulletin & Review, 27, 911-936. doi:10.3758/s13423-020-01738-8 Folks, J. L., & Chhikara, R. S. (1978). inverse Gaussian distribution statistical application—review. Journal Royal Statistical Society Series B: Statistical Methodology, 40(3), 263-275.","code":""},{"path":[]},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate from the Two-Accumulator Racing Diffusion Model (RDM) — rrdm","text":"","code":"rdm_pos <- rrdm(n = 1000, vzero = 0.8, vone = 0.6, bs = 0.5, bias = 0.2, ndt = 0.15)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrt_invgaussian.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse Gaussian Model (Shifted Wald) — rrt_invgaussian","title":"Inverse Gaussian Model (Shifted Wald) — rrt_invgaussian","text":"Density, distribution function, random generation Shifted Wald distribution, also known Shifted Inverse Gaussian distribution. distribution commonly used modeling reaction times cognitive tasks. characterized drift rate (drift), decision threshold (bs), non-decision time (ndt). Functions: rrt_invgaussian(): Simulates random draws Shifted Wald model. drt_invgaussian(): Computes density (likelihood) Shifted Wald distribution. prt_invgaussian(): Computes cumulative distribution function (CDF).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrt_invgaussian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse Gaussian Model (Shifted Wald) — rrt_invgaussian","text":"","code":"rrt_invgaussian(n, drift = 3, bs = 0.5, ndt = 0.2)  drt_invgaussian(x, drift = 3, bs = 0.5, ndt = 0.2, log = FALSE)  prt_invgaussian(   q,   drift = 3,   bs = 0.5,   ndt = 0.2,   lower.tail = TRUE,   log.p = FALSE )  rt_invgaussian_lpdf_expose()  rt_invgaussian_stanvars()  rt_invgaussian(   link_mu = \"softplus\",   link_bs = \"softplus\",   link_tau = \"logit\",   link_minrt = \"identity\" )  log_lik_rt_invgaussian(i, prep, ...)  posterior_predict_rt_invgaussian(i, prep, ...)  posterior_epred_rt_invgaussian(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrt_invgaussian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse Gaussian Model (Shifted Wald) — rrt_invgaussian","text":"n Number observations. length(n) > 1, length taken number required. drift Drift rate. Must positive. Represents average speed evidence accumulation. Range: (0, Inf). bs Decision threshold (boundary separation). Must positive. Represents amount evidence needed make decision. Range: (0, Inf). ndt Non-decision time (shift parameter). Must non-negative. Represents time processes like stimulus encoding response execution. Range: [0, Inf). x Vector quantiles (observed reaction times). log Logical; TRUE, probabilities p given log(p). q Vector quantiles (observed reaction times). lower.tail Logical; TRUE (default), probabilities P[X <= x], otherwise, P[X > x]. log.p Logical; TRUE, probabilities p given log(p). Defaults FALSE. link_mu, link_bs, link_tau, link_minrt Link functions parameters. , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrt_invgaussian.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverse Gaussian Model (Shifted Wald) — rrt_invgaussian","text":"Shifted Wald distribution describes time takes Wiener diffusion process starting 0 reach threshold bs > 0, given positive drift rate drift > 0. resulting time shifted non-decision time ndt >= 0. distribution mathematically equivalent shifting Inverse Gaussian distribution mean mu = bs / drift shape parameter lambda = bs^2. , ShiftedWald(drift, bs, ndt) = InverseGaussian(mean = bs/drift, shape = bs^2) + ndt. random generation algorithm implemented based method described Michael, Schucany, Haas (1976), used statmod package.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrt_invgaussian.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inverse Gaussian Model (Shifted Wald) — rrt_invgaussian","text":"Michael, J. R., Schucany, W. R., & Haas, R. W. (1976). Generating Random Variates Using Transformations Multiple Roots. American Statistician, 30(2), 88–90. doi:10.2307/2683801 Anders, R., Alario, F., & Van Maanen, L. (2016). shifted Wald distribution response time data analysis. Psychological Methods, 21(3), 309–327. doi:10.1037/met0000063 Matzke, D., & Wagenmakers, E. J. (2009). Psychological interpretation ex-Gaussian shifted Wald parameters: diffusion model analysis. Psychonomic Bulletin & Review, 16(5), 798–817. doi:10.3758/PBR.16.5.798 Folks, J. L., & Chhikara, R. S. (1978). inverse Gaussian distribution statistical application—review. Journal Royal Statistical Society Series B: Statistical Methodology, 40(3), 263-275.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrt_invgaussian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverse Gaussian Model (Shifted Wald) — rrt_invgaussian","text":"","code":"# Simulate 1000 RTs rts <- rrt_invgaussian(1000, drift = 3, bs = 0.5, ndt = 0.2) # hist(rts, breaks = 50, main = \"Simulated Shifted Wald RTs\", xlab = \"Reaction Time\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrt_lba.html","id":null,"dir":"Reference","previous_headings":"","what":"Single-Accumulator LBA model — rrt_lba","title":"Single-Accumulator LBA model — rrt_lba","text":"function simulates reaction times using single-accumulator version Linear Ballistic Accumulator (LBA) model.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrt_lba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single-Accumulator LBA model — rrt_lba","text":"","code":"rrt_lba(n, drift = 3, sigma = 1, sigmabias = 0.5, bs = 0.5, ndt = 0.3)  drt_lba(   x,   drift = 1,   sigma = 1,   sigmabias = 0.5,   bs = 0.5,   ndt = 0.3,   log = FALSE )  rt_lba_lpdf_expose()  rt_lba_stanvars()  rt_lba(   link_mu = \"identity\",   link_sigma = \"softplus\",   link_sigmabias = \"softplus\",   link_bs = \"softplus\",   link_tau = \"logit\",   link_minrt = \"identity\" )  log_lik_rt_lba(i, prep)  posterior_predict_rt_lba(i, prep, ...)  posterior_epred_rt_lba(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrt_lba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single-Accumulator LBA model — rrt_lba","text":"n single positive integer giving number trials. drift Mean drift rate. sigma Standard deviation drift rate. sigmabias starting-point range (); must positive. bs additional offset b = sigmabias + bs; must positive. ndt Non-decision time. x observed reaction time (RT). Must greater ndt. log Logical; TRUE, returns log-density. Default: FALSE. link_mu, link_sigma, link_sigmabias, link_bs, link_tau, link_minrt Link functions parameters. , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rrt_lba.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single-Accumulator LBA model — rrt_lba","text":"","code":"# Simulate 1000 trials with specified parameters rts <- rrt_lba(n = 1000, drift = 3, sigma = 1, sigmabias = 0.5, bs = 0.5, ndt = 0.3) hist(rts, breaks = 100, xlab = \"RT (s)\", col = \"lightblue\")"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Shifted Gamma Model for brms — rt_gamma","title":"Shifted Gamma Model for brms — rt_gamma","text":"Provides necessary functions use shifted Gamma distribution custom family brms. version parameterized using tau (proportion non-decision time relative minimum RT) minrt (minimum possible RT), non-decision time ndt = tau * minrt. distribution parameterized shape (mu brms, alpha standard Gamma) scale (sigma brms, beta standard Gamma), well tau, minrt (typically fixed).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shifted Gamma Model for brms — rt_gamma","text":"","code":"rt_gamma(   link_mu = \"softplus\",   link_sigma = \"softplus\",   link_tau = \"logit\",   link_minrt = \"identity\" )  rt_gamma_lpdf_expose()  rt_gamma_stanvars()  log_lik_rt_gamma(i, prep)  posterior_predict_rt_gamma(i, prep, ...)  posterior_epred_rt_gamma(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shifted Gamma Model for brms — rt_gamma","text":"link_mu, link_sigma, link_tau, link_minrt Link functions parameters. , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shifted Gamma Model for brms — rt_gamma","text":"brms::custom_family object.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_invgamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Shifted Inverse Gamma Model for brms — rt_invgamma","title":"Shifted Inverse Gamma Model for brms — rt_invgamma","text":"Provides necessary functions use shifted Inverse Gamma distribution custom family brms. version parameterized using tau (proportion non-decision time relative minimum RT) minrt (minimum possible RT), non-decision time ndt = tau * minrt. distribution parameterized shape (mu brms, alpha standard InvGamma) scale (sigma brms, beta standard InvGamma), well tau, minrt (typically fixed).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_invgamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shifted Inverse Gamma Model for brms — rt_invgamma","text":"","code":"rt_invgamma(   link_mu = \"softplus\",   link_sigma = \"softplus\",   link_tau = \"logit\",   link_minrt = \"identity\" )  rt_invgamma_lpdf_expose()  rt_invgamma_stanvars()  log_lik_rt_invgamma(i, prep)  posterior_predict_rt_invgamma(i, prep, ...)  posterior_epred_rt_invgamma(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_invgamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shifted Inverse Gamma Model for brms — rt_invgamma","text":"link_mu, link_sigma, link_tau, link_minrt Link functions parameters. , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_invgamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shifted Inverse Gamma Model for brms — rt_invgamma","text":"brms::custom_family object.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_invweibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Shifted Inverse Weibull Model (Fréchet Distribution) — rt_invweibull","title":"Shifted Inverse Weibull Model (Fréchet Distribution) — rt_invweibull","text":"Provides necessary functions use shifted Inverse Weibull distribution custom family brms. version reparameterized use tau (proportion non-decision time relative minimum RT) minrt (minimum possible RT), non-decision time ndt = tau * minrt. distribution parameterized shape (mu), scale (sigma), well tau, minrt (typically fixed).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_invweibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shifted Inverse Weibull Model (Fréchet Distribution) — rt_invweibull","text":"","code":"rt_invweibull(   link_mu = \"softplus\",   link_sigma = \"softplus\",   link_tau = \"logit\",   link_minrt = \"identity\" )  rt_invweibull_lpdf_expose()  rt_invweibull_stanvars()  log_lik_rt_invweibull(i, prep)  posterior_predict_rt_invweibull(i, prep, ...)  posterior_epred_rt_invweibull(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_invweibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shifted Inverse Weibull Model (Fréchet Distribution) — rt_invweibull","text":"link_mu, link_sigma, link_tau, link_minrt Link function parameters. , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Shifted Lognormal Model — rt_lognormal","title":"Shifted Lognormal Model — rt_lognormal","text":"Provides necessary functions use shifted lognormal distribution custom family brms. version reparameterized use tau (proportion non-decision time relative minimum RT) minrt (minimum possible RT), non-decision time ndt = tau * minrt. distribution parameterized mean (meanlog, named mu brms) standard deviation (sigma) distribution log scale (sdlog), well tau, minrt (typically fixed).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shifted Lognormal Model — rt_lognormal","text":"","code":"rt_lognormal(   link_mu = \"identity\",   link_sigma = \"softplus\",   link_tau = \"logit\",   link_minrt = \"identity\" )  rt_lognormal_lpdf_expose()  rt_lognormal_stanvars()  log_lik_rt_lognormal(i, prep)  posterior_predict_rt_lognormal(i, prep, ...)  posterior_epred_rt_lognormal(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shifted Lognormal Model — rt_lognormal","text":"link_mu, link_sigma, link_tau, link_minrt Link functions parameters. , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_logweibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Shifted Log-Weibull Model (Gumbel Distribution) — rt_logweibull","title":"Shifted Log-Weibull Model (Gumbel Distribution) — rt_logweibull","text":"Provides necessary functions use shifted Log-Weibull distribution custom family brms. version reparameterized use tau (proportion non-decision time relative minimum RT) minrt (minimum possible RT), non-decision time ndt = tau * minrt. distribution parameterized shape (mu), scale (sigma), well tau, minrt (typically fixed).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_logweibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shifted Log-Weibull Model (Gumbel Distribution) — rt_logweibull","text":"","code":"rt_logweibull(   link_mu = \"identity\",   link_sigma = \"softplus\",   link_tau = \"logit\",   link_minrt = \"identity\" )  rt_logweibull_lpdf_expose()  rt_logweibull_stanvars()  log_lik_rt_logweibull(i, prep)  posterior_predict_rt_logweibull(i, prep, ...)  posterior_epred_rt_logweibull(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_logweibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shifted Log-Weibull Model (Gumbel Distribution) — rt_logweibull","text":"link_mu, link_sigma, link_tau, link_minrt Link functions parameters. , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_weibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Shifted Weibull Model — rt_weibull","title":"Shifted Weibull Model — rt_weibull","text":"Provides necessary functions use shifted Weibull distribution custom family brms. version reparameterized use tau (proportion non-decision time relative minimum RT) minrt (minimum possible RT), non-decision time ndt = tau * minrt. distribution parameterized shape (mu), scale (sigma), well tau, minrt (typically fixed).","code":""},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_weibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shifted Weibull Model — rt_weibull","text":"","code":"rt_weibull(   link_mu = \"softplus\",   link_sigma = \"softplus\",   link_tau = \"logit\",   link_minrt = \"identity\" )  rt_weibull_lpdf_expose()  rt_weibull_stanvars()  log_lik_rt_weibull(i, prep)  posterior_predict_rt_weibull(i, prep, ...)  posterior_epred_rt_weibull(prep)"},{"path":"https://github.com/DominiqueMakowski/cogmod/reference/rt_weibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shifted Weibull Model — rt_weibull","text":"link_mu, link_sigma, link_tau, link_minrt Link functions parameters. , prep brms' functions run: index observation brms preparation object. ... Additional arguments.","code":""}]
